version: '3'
services:
  agent:
    image: "datadog/agent:7.31.0"
    environment:
      - DD_API_KEY
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:development'
# add agent env variables
# add agent trace port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
# add agent log labels
  discounts:
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
      - DATADOG_SERVICE=discounts-service
# add discounts env variables
    image: "ddtraining/discounts:2.1.0"
    command: flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    volumes:
      - "/ecommworkshop/discounts-service:/app"
    depends_on:
      - agent
      - db
# add discounts log labels
  frontend:
    environment:
      - DB_USERNAME
      - DB_PASSWORD
# add frontend env variables
    image: "ddtraining/storefront:2.1.0"
    ports:
      - "3000:3000"
    depends_on:
      - agent
      - db
      - discounts
      - advertisements
# add frontend log labels
  advertisements:
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
# add ads env variables
    image: "ddtraining/advertisements:2.1.0"
    command: flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    volumes:
      - "/ecommworkshop/ads-service:/app"
    depends_on:
      - agent
      - db
# add ads log labels
  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    ports:
      - '5432:5432'
    labels:
      com.datadoghq.tags.env: 'sfo101'
      com.datadoghq.tags.service: 'database'
      com.datadoghq.tags.version: '11.12'
      my.custom.label.team: 'database'
      com.datadoghq.ad.check_names: '["postgres"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":5432,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "database"}]'
    volumes:
      - /root/postgres:/var/lib/postgresql/data
      - /root/dd_agent.sql:/docker-entrypoint-initdb.d/dd_agent.sql